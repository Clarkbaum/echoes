'use strict';

//DEPENDENCIES
var express = require('express');
var bodyParser = require('body-parser');
var morgan = require('morgan');
var path = require('path');
var pg = require('pg');
<<<<<<< HEAD
var db = require('../db/db.js');
var cookie = require('cookie-parser');
=======
var session = require('express-session');
var db = require('../db/db.js');
>>>>>>> Rebase commit
var app = express();

// ROUTE MODULE DEPENDENCIES
var appServer = require('./routes/appRoutes.js');
var authServer = require('./routes/authRoutes.js');
var newUserServer = require('./routes/newUserRoutes.js');
var dbServer = require('./routes/dbRoutes.js');
var signoutServer = require('./routes/signoutRoute.js');

// MIDDLEWARE
app.use(bodyParser.urlencoded({ extended: false }));
app.use(bodyParser.json());
app.use(morgan('combined'));
// TODO: add cookie secret!
app.use(cookie());
app.use('/public', express.static(path.join(__dirname, '/../compiled/client')));
app.use('/node_modules', express.static(path.join(__dirname, '/../node_modules')));

// ROUTERS
app.use('/', appServer);
app.use('/querydb', dbServer);
app.use('/signin', authServer);
app.use('/signup', newUserServer);
app.use('/signout', signoutServer);
app.use(function (req, res, next) {
  res.status(404).send('Sorry--we can\'t find that');
});

// LISTENER
app.listen(1337, function () {
  console.log('Satan is listening on port 1337.');
});
<<<<<<< HEAD
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NlcnZlci9zZXJ2ZXIuanMiXSwibmFtZXMiOlsiZXhwcmVzcyIsInJlcXVpcmUiLCJib2R5UGFyc2VyIiwibW9yZ2FuIiwicGF0aCIsInBnIiwiZGIiLCJjb29raWUiLCJhcHAiLCJhcHBTZXJ2ZXIiLCJhdXRoU2VydmVyIiwibmV3VXNlclNlcnZlciIsImRiU2VydmVyIiwic2lnbm91dFNlcnZlciIsInVzZSIsInVybGVuY29kZWQiLCJleHRlbmRlZCIsImpzb24iLCJzdGF0aWMiLCJqb2luIiwiX19kaXJuYW1lIiwicmVxIiwicmVzIiwibmV4dCIsInN0YXR1cyIsInNlbmQiLCJsaXN0ZW4iLCJjb25zb2xlIiwibG9nIl0sIm1hcHBpbmdzIjoiOztBQUFBO0FBQ0EsSUFBSUEsVUFBVUMsUUFBUSxTQUFSLENBQWQ7QUFDQSxJQUFJQyxhQUFhRCxRQUFRLGFBQVIsQ0FBakI7QUFDQSxJQUFJRSxTQUFTRixRQUFRLFFBQVIsQ0FBYjtBQUNBLElBQUlHLE9BQU9ILFFBQVEsTUFBUixDQUFYO0FBQ0EsSUFBSUksS0FBS0osUUFBUSxJQUFSLENBQVQ7QUFDQSxJQUFJSyxLQUFLTCxRQUFRLGFBQVIsQ0FBVDtBQUNBLElBQUlNLFNBQVNOLFFBQVEsZUFBUixDQUFiO0FBQ0EsSUFBSU8sTUFBTVIsU0FBVjs7QUFFQTtBQUNBLElBQUlTLFlBQVlSLFFBQVEsdUJBQVIsQ0FBaEI7QUFDQSxJQUFJUyxhQUFhVCxRQUFRLHdCQUFSLENBQWpCO0FBQ0EsSUFBSVUsZ0JBQWdCVixRQUFRLDJCQUFSLENBQXBCO0FBQ0EsSUFBSVcsV0FBV1gsUUFBUSxzQkFBUixDQUFmO0FBQ0EsSUFBSVksZ0JBQWdCWixRQUFRLDBCQUFSLENBQXBCOztBQUVBO0FBQ0FPLElBQUlNLEdBQUosQ0FBUVosV0FBV2EsVUFBWCxDQUFzQixFQUFDQyxVQUFVLEtBQVgsRUFBdEIsQ0FBUjtBQUNBUixJQUFJTSxHQUFKLENBQVFaLFdBQVdlLElBQVgsRUFBUjtBQUNBVCxJQUFJTSxHQUFKLENBQVFYLE9BQU8sVUFBUCxDQUFSO0FBQ0E7QUFDQUssSUFBSU0sR0FBSixDQUFRUCxRQUFSO0FBQ0FDLElBQUlNLEdBQUosQ0FBUSxTQUFSLEVBQW1CZCxRQUFRa0IsTUFBUixDQUFlZCxLQUFLZSxJQUFMLENBQVVDLFNBQVYsRUFBcUIscUJBQXJCLENBQWYsQ0FBbkI7QUFDQVosSUFBSU0sR0FBSixDQUFRLGVBQVIsRUFBeUJkLFFBQVFrQixNQUFSLENBQWVkLEtBQUtlLElBQUwsQ0FBVUMsU0FBVixFQUFxQixrQkFBckIsQ0FBZixDQUF6Qjs7QUFFQTtBQUNBWixJQUFJTSxHQUFKLENBQVEsR0FBUixFQUFhTCxTQUFiO0FBQ0FELElBQUlNLEdBQUosQ0FBUSxVQUFSLEVBQW9CRixRQUFwQjtBQUNBSixJQUFJTSxHQUFKLENBQVEsU0FBUixFQUFtQkosVUFBbkI7QUFDQUYsSUFBSU0sR0FBSixDQUFRLFNBQVIsRUFBbUJILGFBQW5CO0FBQ0FILElBQUlNLEdBQUosQ0FBUSxVQUFSLEVBQW9CRCxhQUFwQjtBQUNBTCxJQUFJTSxHQUFKLENBQVEsVUFBVU8sR0FBVixFQUFlQyxHQUFmLEVBQW9CQyxJQUFwQixFQUEwQjtBQUNoQ0QsTUFBSUUsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCLDRCQUFyQjtBQUNELENBRkQ7O0FBSUE7QUFDQWpCLElBQUlrQixNQUFKLENBQVcsSUFBWCxFQUFpQixZQUFZO0FBQzNCQyxVQUFRQyxHQUFSLENBQVksa0NBQVo7QUFDRCxDQUZEIiwiZmlsZSI6InNlcnZlci5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vREVQRU5ERU5DSUVTXG52YXIgZXhwcmVzcyA9IHJlcXVpcmUoJ2V4cHJlc3MnKTtcbnZhciBib2R5UGFyc2VyID0gcmVxdWlyZSgnYm9keS1wYXJzZXInKTtcbnZhciBtb3JnYW4gPSByZXF1aXJlKCdtb3JnYW4nKTtcbnZhciBwYXRoID0gcmVxdWlyZSgncGF0aCcpO1xudmFyIHBnID0gcmVxdWlyZSgncGcnKTtcbnZhciBkYiA9IHJlcXVpcmUoJy4uL2RiL2RiLmpzJyk7XG52YXIgY29va2llID0gcmVxdWlyZSgnY29va2llLXBhcnNlcicpO1xudmFyIGFwcCA9IGV4cHJlc3MoKTtcblxuLy8gUk9VVEUgTU9EVUxFIERFUEVOREVOQ0lFU1xudmFyIGFwcFNlcnZlciA9IHJlcXVpcmUoJy4vcm91dGVzL2FwcFJvdXRlcy5qcycpO1xudmFyIGF1dGhTZXJ2ZXIgPSByZXF1aXJlKCcuL3JvdXRlcy9hdXRoUm91dGVzLmpzJyk7XG52YXIgbmV3VXNlclNlcnZlciA9IHJlcXVpcmUoJy4vcm91dGVzL25ld1VzZXJSb3V0ZXMuanMnKTtcbnZhciBkYlNlcnZlciA9IHJlcXVpcmUoJy4vcm91dGVzL2RiUm91dGVzLmpzJyk7XG52YXIgc2lnbm91dFNlcnZlciA9IHJlcXVpcmUoJy4vcm91dGVzL3NpZ25vdXRSb3V0ZS5qcycpO1xuXG4vLyBNSURETEVXQVJFXG5hcHAudXNlKGJvZHlQYXJzZXIudXJsZW5jb2RlZCh7ZXh0ZW5kZWQ6IGZhbHNlfSkpO1xuYXBwLnVzZShib2R5UGFyc2VyLmpzb24oKSk7XG5hcHAudXNlKG1vcmdhbignY29tYmluZWQnKSk7XG4vLyBUT0RPOiBhZGQgY29va2llIHNlY3JldCFcbmFwcC51c2UoY29va2llKCkpO1xuYXBwLnVzZSgnL3B1YmxpYycsIGV4cHJlc3Muc3RhdGljKHBhdGguam9pbihfX2Rpcm5hbWUsICcvLi4vY29tcGlsZWQvY2xpZW50JykpKTtcbmFwcC51c2UoJy9ub2RlX21vZHVsZXMnLCBleHByZXNzLnN0YXRpYyhwYXRoLmpvaW4oX19kaXJuYW1lLCAnLy4uL25vZGVfbW9kdWxlcycpKSk7XG5cbi8vIFJPVVRFUlNcbmFwcC51c2UoJy8nLCBhcHBTZXJ2ZXIpO1xuYXBwLnVzZSgnL3F1ZXJ5ZGInLCBkYlNlcnZlcik7XG5hcHAudXNlKCcvc2lnbmluJywgYXV0aFNlcnZlcik7XG5hcHAudXNlKCcvc2lnbnVwJywgbmV3VXNlclNlcnZlcik7XG5hcHAudXNlKCcvc2lnbm91dCcsIHNpZ25vdXRTZXJ2ZXIpO1xuYXBwLnVzZShmdW5jdGlvbiAocmVxLCByZXMsIG5leHQpIHtcbiAgcmVzLnN0YXR1cyg0MDQpLnNlbmQoJ1NvcnJ5LS13ZSBjYW5cXCd0IGZpbmQgdGhhdCcpXG59KTtcblxuLy8gTElTVEVORVJcbmFwcC5saXN0ZW4oMTMzNywgZnVuY3Rpb24gKCkge1xuICBjb25zb2xlLmxvZygnU2F0YW4gaXMgbGlzdGVuaW5nIG9uIHBvcnQgMTMzNy4nKVxufSk7XG4iXX0=
=======
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NlcnZlci9zZXJ2ZXIuanMiXSwibmFtZXMiOlsiZXhwcmVzcyIsInJlcXVpcmUiLCJib2R5UGFyc2VyIiwibW9yZ2FuIiwicGF0aCIsInBnIiwic2Vzc2lvbiIsImRiIiwiYXBwIiwiYXBwU2VydmVyIiwiYXV0aFNlcnZlciIsIm5ld1VzZXJTZXJ2ZXIiLCJkYlNlcnZlciIsInNpZ25vdXRTZXJ2ZXIiLCJ1c2UiLCJ1cmxlbmNvZGVkIiwiZXh0ZW5kZWQiLCJqc29uIiwic3RhdGljIiwiam9pbiIsIl9fZGlybmFtZSIsInNlY3JldCIsInJlc2F2ZSIsInNhdmVVbmluaXRpYWxpemVkIiwicmVxIiwicmVzIiwibmV4dCIsInN0YXR1cyIsInNlbmQiLCJsaXN0ZW4iLCJjb25zb2xlIiwibG9nIl0sIm1hcHBpbmdzIjoiOztBQUFBO0FBQ0EsSUFBSUEsVUFBVUMsUUFBUSxTQUFSLENBQWQ7QUFDQSxJQUFJQyxhQUFhRCxRQUFRLGFBQVIsQ0FBakI7QUFDQSxJQUFJRSxTQUFTRixRQUFRLFFBQVIsQ0FBYjtBQUNBLElBQUlHLE9BQU9ILFFBQVEsTUFBUixDQUFYO0FBQ0EsSUFBSUksS0FBS0osUUFBUSxJQUFSLENBQVQ7QUFDQSxJQUFJSyxVQUFVTCxRQUFRLGlCQUFSLENBQWQ7QUFDQSxJQUFJTSxLQUFLTixRQUFRLGFBQVIsQ0FBVDtBQUNBLElBQUlPLE1BQU1SLFNBQVY7O0FBRUE7QUFDQSxJQUFJUyxZQUFZUixRQUFRLHVCQUFSLENBQWhCO0FBQ0EsSUFBSVMsYUFBYVQsUUFBUSx3QkFBUixDQUFqQjtBQUNBLElBQUlVLGdCQUFnQlYsUUFBUSwyQkFBUixDQUFwQjtBQUNBLElBQUlXLFdBQVdYLFFBQVEsc0JBQVIsQ0FBZjtBQUNBLElBQUlZLGdCQUFnQlosUUFBUSwwQkFBUixDQUFwQjs7QUFFQTtBQUNBTyxJQUFJTSxHQUFKLENBQVFaLFdBQVdhLFVBQVgsQ0FBc0IsRUFBQ0MsVUFBVSxLQUFYLEVBQXRCLENBQVI7QUFDQVIsSUFBSU0sR0FBSixDQUFRWixXQUFXZSxJQUFYLEVBQVI7QUFDQVQsSUFBSU0sR0FBSixDQUFRWCxPQUFPLFVBQVAsQ0FBUjtBQUNBSyxJQUFJTSxHQUFKLENBQVEsU0FBUixFQUFtQmQsUUFBUWtCLE1BQVIsQ0FBZWQsS0FBS2UsSUFBTCxDQUFVQyxTQUFWLEVBQXFCLFlBQXJCLENBQWYsQ0FBbkI7O0FBRUE7QUFDQVosSUFBSU0sR0FBSixDQUFRUixRQUFRO0FBQ2RlLFVBQVEsS0FETTtBQUVkQyxVQUFRLEtBRk07QUFHZEMscUJBQW1CO0FBSEwsQ0FBUixDQUFSOztBQU1BO0FBQ0FmLElBQUlNLEdBQUosQ0FBUSxHQUFSLEVBQWFMLFNBQWI7QUFDQUQsSUFBSU0sR0FBSixDQUFRLFVBQVIsRUFBb0JGLFFBQXBCO0FBQ0FKLElBQUlNLEdBQUosQ0FBUSxTQUFSLEVBQW1CSixVQUFuQjtBQUNBRixJQUFJTSxHQUFKLENBQVEsU0FBUixFQUFtQkgsYUFBbkI7QUFDQUgsSUFBSU0sR0FBSixDQUFRLFVBQVIsRUFBb0JELGFBQXBCO0FBQ0FMLElBQUlNLEdBQUosQ0FBUSxVQUFVVSxHQUFWLEVBQWVDLEdBQWYsRUFBb0JDLElBQXBCLEVBQTBCO0FBQ2hDRCxNQUFJRSxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUIsNEJBQXJCO0FBQ0QsQ0FGRDs7QUFJQTtBQUNBcEIsSUFBSXFCLE1BQUosQ0FBVyxJQUFYLEVBQWlCLFlBQVk7QUFDM0JDLFVBQVFDLEdBQVIsQ0FBWSxrQ0FBWjtBQUNELENBRkQiLCJmaWxlIjoic2VydmVyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy9ERVBFTkRFTkNJRVNcbnZhciBleHByZXNzID0gcmVxdWlyZSgnZXhwcmVzcycpO1xudmFyIGJvZHlQYXJzZXIgPSByZXF1aXJlKCdib2R5LXBhcnNlcicpO1xudmFyIG1vcmdhbiA9IHJlcXVpcmUoJ21vcmdhbicpO1xudmFyIHBhdGggPSByZXF1aXJlKCdwYXRoJyk7XG52YXIgcGcgPSByZXF1aXJlKCdwZycpO1xudmFyIHNlc3Npb24gPSByZXF1aXJlKCdleHByZXNzLXNlc3Npb24nKTtcbnZhciBkYiA9IHJlcXVpcmUoJy4uL2RiL2RiLmpzJylcbnZhciBhcHAgPSBleHByZXNzKCk7XG5cbi8vIFJPVVRFIE1PRFVMRSBERVBFTkRFTkNJRVNcbnZhciBhcHBTZXJ2ZXIgPSByZXF1aXJlKCcuL3JvdXRlcy9hcHBSb3V0ZXMuanMnKTtcbnZhciBhdXRoU2VydmVyID0gcmVxdWlyZSgnLi9yb3V0ZXMvYXV0aFJvdXRlcy5qcycpO1xudmFyIG5ld1VzZXJTZXJ2ZXIgPSByZXF1aXJlKCcuL3JvdXRlcy9uZXdVc2VyUm91dGVzLmpzJyk7XG52YXIgZGJTZXJ2ZXIgPSByZXF1aXJlKCcuL3JvdXRlcy9kYlJvdXRlcy5qcycpO1xudmFyIHNpZ25vdXRTZXJ2ZXIgPSByZXF1aXJlKCcuL3JvdXRlcy9zaWdub3V0Um91dGUuanMnKTtcblxuLy8gTUlERExFV0FSRVxuYXBwLnVzZShib2R5UGFyc2VyLnVybGVuY29kZWQoe2V4dGVuZGVkOiBmYWxzZX0pKTtcbmFwcC51c2UoYm9keVBhcnNlci5qc29uKCkpO1xuYXBwLnVzZShtb3JnYW4oJ2NvbWJpbmVkJykpO1xuYXBwLnVzZSgnL3B1YmxpYycsIGV4cHJlc3Muc3RhdGljKHBhdGguam9pbihfX2Rpcm5hbWUsICcvLi4vY2xpZW50JykpKTtcblxuLy8gU0VTU0lPTlxuYXBwLnVzZShzZXNzaW9uKHtcbiAgc2VjcmV0OiAnNjY2JyxcbiAgcmVzYXZlOiBmYWxzZSxcbiAgc2F2ZVVuaW5pdGlhbGl6ZWQ6IHRydWVcbn0pKTtcblxuLy8gUk9VVEVSU1xuYXBwLnVzZSgnLycsIGFwcFNlcnZlcik7XG5hcHAudXNlKCcvcXVlcnlkYicsIGRiU2VydmVyKTtcbmFwcC51c2UoJy9zaWduaW4nLCBhdXRoU2VydmVyKTtcbmFwcC51c2UoJy9zaWdudXAnLCBuZXdVc2VyU2VydmVyKTtcbmFwcC51c2UoJy9zaWdub3V0Jywgc2lnbm91dFNlcnZlcik7XG5hcHAudXNlKGZ1bmN0aW9uIChyZXEsIHJlcywgbmV4dCkge1xuICByZXMuc3RhdHVzKDQwNCkuc2VuZCgnU29ycnktLXdlIGNhblxcJ3QgZmluZCB0aGF0Jylcbn0pO1xuXG4vLyBMSVNURU5FUlxuYXBwLmxpc3RlbigxMzM3LCBmdW5jdGlvbiAoKSB7XG4gIGNvbnNvbGUubG9nKCdTYXRhbiBpcyBsaXN0ZW5pbmcgb24gcG9ydCAxMzM3LicpXG59KTtcbiJdfQ==
>>>>>>> Rebase commit
